dilated_ratio:  [1, 2, 4, 8, 16]
segment_length:  [1024, 5792, 32768, 185363, 1048576]
Number of trainable LongNet parameters:  85148160
Global Pooling: False
slide_encoder.pth: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 345M/345M [00:31<00:00, 10.9MB/s]
[92m Successfully Loaded Pretrained GigaPath model from hf_hub:prov-gigapath/prov-gigapath [00m
[768, 512, 256]
 13%|███████████████████████▏                                                                                                                                                           | 67/518 [00:04<00:30, 14.62it/s]
Traceback (most recent call last):
  File "/work/PAMIL_two_round/train.py", line 88, in <module>
    main(args)
  File "/work/PAMIL_two_round/train.py", line 81, in main
    train(args,basedmodel,ppo,classifier_chief, classifier_giga,FusionHisF, gigapath_model, memory,train_dataloader, validation_dataloader, test_dataloader, wandb)
  File "/work/PAMIL_two_round/utilmodule/core.py", line 296, in train
    memory.merge_msg_states.append(gigapath_wsi_embedding(gigapath_model, whole_gigapath, update_coords).to(device))
  File "/work/PAMIL_two_round/utilmodule/core.py", line 137, in gigapath_wsi_embedding
    wsi_feature_emb = run_inference_with_slide_encoder(slide_encoder_model=gigapath_model, tile_embeds=feature, coords=coords)
  File "/opt/conda/lib/python3.10/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "/work/PAMIL_two_round/gigapath/pipeline.py", line 187, in run_inference_with_slide_encoder
    slide_embeds = slide_encoder_model(tile_embeds.cuda(), coords.cuda(), all_layer_embed=True)
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/work/PAMIL_two_round/gigapath/slide_encoder.py", line 209, in forward
    x_list = self.encoder(src_tokens=None, token_embeddings=x, return_all_hiddens=all_layer_embed)["encoder_states"]
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/work/PAMIL_two_round/gigapath/torchscale/model/../../torchscale/architecture/encoder.py", line 374, in forward
    x, l_aux_i = layer(
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/work/PAMIL_two_round/gigapath/torchscale/model/../../torchscale/architecture/encoder.py", line 127, in forward
    x, _ = self.self_attn(
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/work/PAMIL_two_round/gigapath/torchscale/model/../../torchscale/component/dilated_attention.py", line 210, in forward
    attn = self.scattering(outs, lses, tgt_len, bsz, offset=offset)
  File "/work/PAMIL_two_round/gigapath/torchscale/model/../../torchscale/component/dilated_attention.py", line 110, in scattering
    o, lse = self.sparse_to_dense(o, lse, dr)
  File "/work/PAMIL_two_round/gigapath/torchscale/model/../../torchscale/component/dilated_attention.py", line 45, in sparse_to_dense
    lse = torch.diag_embed(lse, offset=0, dim1=3, dim2=4)
KeyboardInterrupt
