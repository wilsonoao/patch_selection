dilated_ratio:  [1, 2, 4, 8, 16]
segment_length:  [1024, 5792, 32768, 185363, 1048576]
Number of trainable LongNet parameters:  85148160
Global Pooling: False
slide_encoder.pth: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 345M/345M [00:31<00:00, 11.0MB/s]
[92m Successfully Loaded Pretrained GigaPath model from hf_hub:prov-gigapath/prov-gigapath [00m
[768, 512, 256]
  3%|███▍                                                                                                                            | 14/518 [00:02<00:54,  9.20it/s]
torch.Size([1, 1988, 1536])
torch.Size([1, 1988, 2])
torch.Size([1, 7588, 1536])
torch.Size([1, 7588, 2])
torch.Size([1, 2402, 1536])
torch.Size([1, 2402, 2])
torch.Size([1, 9242, 1536])
torch.Size([1, 9242, 2])
torch.Size([1, 2247, 1536])
torch.Size([1, 2247, 2])
torch.Size([1, 3261, 1536])
torch.Size([1, 3261, 2])
torch.Size([1, 2116, 1536])
torch.Size([1, 2116, 2])
torch.Size([1, 3540, 1536])
torch.Size([1, 3540, 2])
torch.Size([1, 1193, 1536])
torch.Size([1, 1193, 2])
torch.Size([1, 832, 1536])
torch.Size([1, 832, 2])
torch.Size([1, 975, 1536])
torch.Size([1, 975, 2])
torch.Size([1, 492, 1536])
torch.Size([1, 492, 2])
torch.Size([1, 3621, 1536])
torch.Size([1, 3621, 2])
torch.Size([1, 2332, 1536])
torch.Size([1, 2332, 2])
torch.Size([1, 3615, 1536])
torch.Size([1, 3615, 2])
torch.Size([1, 4129, 1536])
torch.Size([1, 4129, 2])
torch.Size([1, 914, 1536])
torch.Size([1, 914, 2])
torch.Size([1, 504, 1536])
torch.Size([1, 504, 2])
torch.Size([1, 4699, 1536])
torch.Size([1, 4699, 2])
torch.Size([1, 2902, 1536])
torch.Size([1, 2902, 2])
torch.Size([1, 1148, 1536])
torch.Size([1, 1148, 2])
torch.Size([1, 1138, 1536])
torch.Size([1, 1138, 2])
torch.Size([1, 634, 1536])
torch.Size([1, 634, 2])
torch.Size([1, 1400, 1536])
torch.Size([1, 1400, 2])
torch.Size([1, 10091, 1536])
torch.Size([1, 10091, 2])
torch.Size([1, 175, 1536])
torch.Size([1, 175, 2])
torch.Size([1, 2369, 1536])
torch.Size([1, 2369, 2])
torch.Size([1, 3165, 1536])
torch.Size([1, 3165, 2])
torch.Size([1, 837, 1536])
torch.Size([1, 837, 2])
torch.Size([1, 4590, 1536])
torch.Size([1, 4590, 2])
torch.Size([1, 3315, 1536])
torch.Size([1, 3315, 2])
torch.Size([1, 1761, 1536])
torch.Size([1, 1761, 2])
torch.Size([1, 600, 1536])
torch.Size([1, 600, 2])
torch.Size([1, 4067, 1536])
torch.Size([1, 4067, 2])
torch.Size([1, 80, 1536])
torch.Size([1, 80, 2])
torch.Size([1, 431, 1536])
torch.Size([1, 431, 2])
torch.Size([1, 9365, 1536])
torch.Size([1, 9365, 2])
torch.Size([1, 664, 1536])
torch.Size([1, 664, 2])
torch.Size([1, 1232, 1536])
torch.Size([1, 1232, 2])
torch.Size([1, 5259, 1536])
torch.Size([1, 5259, 2])
torch.Size([1, 887, 1536])
torch.Size([1, 887, 2])
torch.Size([1, 3139, 1536])
Traceback (most recent call last):
  File "/work/PAMIL_two_round/train.py", line 88, in <module>
    main(args)
  File "/work/PAMIL_two_round/train.py", line 81, in main
    train(args,basedmodel,ppo,classifier_chief, classifier_giga,FusionHisF, gigapath_model, memory,train_dataloader, validation_dataloader, test_dataloader, wandb)
  File "/work/PAMIL_two_round/utilmodule/core.py", line 296, in train
    print(whole_gigapath.shape)
  File "/opt/conda/lib/python3.10/site-packages/wandb/sdk/lib/console_capture.py", line 155, in write_with_callbacks
    cb(s, n)
  File "/opt/conda/lib/python3.10/site-packages/wandb/sdk/lib/redirect.py", line 662, in _on_write
    cb(written_data)
  File "/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 2374, in <lambda>
    lambda data: self._console_raw_callback("stdout", data),
  File "/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 391, in wrapper
    return func(self, *args, **kwargs)
  File "/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 449, in wrapper_fn
    return func(self, *args, **kwargs)
  File "/opt/conda/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1561, in _console_raw_callback
    self._backend.interface.publish_output_raw(name, data)
  File "/opt/conda/lib/python3.10/site-packages/wandb/sdk/interface/interface.py", line 771, in publish_output_raw
    o.timestamp.GetCurrentTime()
  File "/opt/conda/lib/python3.10/site-packages/google/protobuf/internal/well_known_types.py", line 184, in GetCurrentTime
    self.FromDatetime(datetime.datetime.now(tz=datetime.timezone.utc))
  File "/opt/conda/lib/python3.10/site-packages/google/protobuf/internal/well_known_types.py", line 283, in FromDatetime
    seconds = calendar.timegm(dt.utctimetuple())
  File "/opt/conda/lib/python3.10/calendar.py", line 647, in timegm
    days = datetime.date(year, month, 1).toordinal() - _EPOCH_ORD + day - 1
KeyboardInterrupt
